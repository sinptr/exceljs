{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/worksheet-xform.js"],"names":["_","require","utils","XmlStream","RelType","Merges","BaseXform","ListXform","RowXform","ColXform","DimensionXform","HyperlinkXform","MergeCellXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","SheetViewXform","PageMarginsXform","PageSetupXform","HeaderFooterXform","PrintOptionsXform","AutoFilterXform","PictureXform","DrawingXform","RowBreaksXform","WorkSheetXform","module","exports","options","maxRows","maxCols","map","sheetPr","dimension","sheetViews","tag","count","childXform","sheetFormatPr","cols","sheetData","empty","maxItems","autoFilter","mergeCells","rowBreaks","hyperlinks","pageMargins","headerFooter","dataValidations","pageSetup","printOptions","picture","drawing","inherits","WORKSHEET_ATTRIBUTES","xmlns","prepare","model","merges","formulae","siFormulae","rows","rels","nextRid","r","length","rId","forEach","hyperlink","push","Id","Type","Hyperlink","Target","target","TargetMode","drawingRelsHash","bookImage","media","medium","type","imageId","Image","name","extension","background","image","drawingsCount","anchors","drawings","rIdImage","range","render","xmlStream","openXml","StdDocAttributes","openNode","sheetFormatPropertiesModel","properties","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","undefined","sheetPropertiesModel","outlineProperties","tabColor","fitToPage","pageMarginsModel","margins","headerFooterModel","printOptionsModel","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","dimensions","views","closeNode","parseOpen","node","parser","each","xform","reset","parseText","text","parseClose","outlinePropertiesx","sheetProperties","Object","assign","header","footer","reconcile","relationships","reduce","h","rel","hyperlinkMap","address","filter","Boolean","row","cells","drawingRel","match","drawingName","anchor","index","backgroundRel","split","mediaIndex"],"mappings":"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","file":"worksheet-xform.js","sourcesContent":["'use strict';\n\nconst _ = require('../../../utils/under-dash');\n\nconst utils = require('../../../utils/utils');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst RelType = require('../../rel-type');\n\nconst Merges = require('./merges');\n\nconst BaseXform = require('../base-xform');\n// var StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst RowXform = require('./row-xform');\nconst ColXform = require('./col-xform');\nconst DimensionXform = require('./dimension-xform');\nconst HyperlinkXform = require('./hyperlink-xform');\nconst MergeCellXform = require('./merge-cell-xform');\nconst DataValidationsXform = require('./data-validations-xform');\nconst SheetPropertiesXform = require('./sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('./sheet-format-properties-xform');\nconst SheetViewXform = require('./sheet-view-xform');\nconst PageMarginsXform = require('./page-margins-xform');\nconst PageSetupXform = require('./page-setup-xform');\nconst HeaderFooterXform = require('./header-footer-xform');\nconst PrintOptionsXform = require('./print-options-xform');\nconst AutoFilterXform = require('./auto-filter-xform');\nconst PictureXform = require('./picture-xform');\nconst DrawingXform = require('./drawing-xform');\nconst RowBreaksXform = require('./row-breaks-xform');\n\nconst WorkSheetXform = module.exports = function(options) {\n  const maxRows = options && options.maxRows;\n  const maxCols = options && options.maxCols;\n  this.map = {\n    sheetPr: new SheetPropertiesXform(),\n    dimension: new DimensionXform(),\n    sheetViews: new ListXform({tag: 'sheetViews', count: false, childXform: new SheetViewXform()}),\n    sheetFormatPr: new SheetFormatPropertiesXform(),\n    cols: new ListXform({tag: 'cols', count: false, childXform: new ColXform()}),\n    sheetData: new ListXform({tag: 'sheetData', count: false, empty: true, childXform: new RowXform({maxItems: maxCols}), maxItems: maxRows}),\n    autoFilter: new AutoFilterXform(),\n    mergeCells: new ListXform({tag: 'mergeCells', count: true, childXform: new MergeCellXform()}),\n    rowBreaks: new RowBreaksXform(),\n    hyperlinks: new ListXform({tag: 'hyperlinks', count: false, childXform: new HyperlinkXform()}),\n    pageMargins: new PageMarginsXform(),\n    headerFooter: new HeaderFooterXform(),\n    dataValidations: new DataValidationsXform(),\n    pageSetup: new PageSetupXform(),\n    printOptions: new PrintOptionsXform(),\n    picture: new PictureXform(),\n    drawing: new DrawingXform(),\n  };\n};\n\nutils.inherits(WorkSheetXform, BaseXform, {\n  WORKSHEET_ATTRIBUTES: {\n    xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n    'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n    'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n    'mc:Ignorable': 'x14ac',\n    'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  },\n}, {\n  prepare(model, options) {\n    options.merges = new Merges();\n    model.hyperlinks = options.hyperlinks = [];\n\n    options.formulae = {};\n    options.siFormulae = 0;\n    this.map.cols.prepare(model.cols, options);\n    this.map.sheetData.prepare(model.rows, options);\n\n    model.mergeCells = options.merges.mergeCells;\n\n    // prepare relationships\n    const rels = model.rels = [];\n    function nextRid(r) { return `rId${  r.length + 1}`; }\n    let rId;\n    model.hyperlinks.forEach((hyperlink) => {\n      rId = nextRid(rels);\n      hyperlink.rId = rId;\n      rels.push({\n        Id: rId,\n        Type: RelType.Hyperlink,\n        Target: hyperlink.target,\n        TargetMode: 'External',\n      });\n    });\n\n    const drawingRelsHash = [];\n    let bookImage;\n    model.media.forEach((medium) => {\n      if (medium.type === 'background') {\n        rId = nextRid(rels);\n        bookImage = options.media[medium.imageId];\n        rels.push({\n          Id: rId,\n          Type: RelType.Image,\n          Target: `../media/${bookImage.name}.${bookImage.extension}`,\n        });\n        model.background = {\n          rId,\n        };\n        model.image = options.media[medium.imageId];\n      } else if (medium.type === 'image') {\n        let drawing = model.drawing;\n        bookImage = options.media[medium.imageId];\n        if (!drawing) {\n          drawing = model.drawing = {\n            rId: nextRid(rels),\n            name: `drawing${  ++options.drawingsCount}`,\n            anchors: [],\n            rels: [],\n          };\n          options.drawings.push(drawing);\n          rels.push({\n            Id: drawing.rId,\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n            Target: `../drawings/${  drawing.name  }.xml`,\n          });\n        }\n        let rIdImage = drawingRelsHash[medium.imageId];\n        if (!rIdImage) {\n          rIdImage = nextRid(drawing.rels);\n          drawingRelsHash[medium.imageId] = rIdImage;\n          drawing.rels.push({\n            Id: rIdImage,\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n            Target: `../media/${bookImage.name}.${bookImage.extension}`,\n          });\n        }\n        drawing.anchors.push({\n          picture: {\n            rId: rIdImage,\n          },\n          range: medium.range,\n        });\n      }\n    });\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('worksheet', WorkSheetXform.WORKSHEET_ATTRIBUTES);\n\n    const sheetFormatPropertiesModel = model.properties ? {\n      defaultRowHeight: model.properties.defaultRowHeight,\n      dyDescent: model.properties.dyDescent,\n      outlineLevelCol: model.properties.outlineLevelCol,\n      outlineLevelRow: model.properties.outlineLevelRow,\n    } : undefined;\n    const sheetPropertiesModel = {\n      outlineProperties: model.properties && model.properties.outlineProperties,\n      tabColor: model.properties && model.properties.tabColor,\n      pageSetup: model.pageSetup && model.pageSetup.fitToPage ? {\n        fitToPage: model.pageSetup.fitToPage,\n      } : undefined,\n    };\n    const pageMarginsModel = model.pageSetup && model.pageSetup.margins;\n    const headerFooterModel = model.pageSetup && model.pageSetup.headerFooter;\n    const printOptionsModel = {\n      showRowColHeaders: model.showRowColHeaders,\n      showGridLines: model.showGridLines,\n      horizontalCentered: model.horizontalCentered,\n      verticalCentered: model.verticalCentered,\n    };\n\n    this.map.sheetPr.render(xmlStream, sheetPropertiesModel);\n    this.map.dimension.render(xmlStream, model.dimensions);\n    this.map.sheetViews.render(xmlStream, model.views);\n    this.map.sheetFormatPr.render(xmlStream, sheetFormatPropertiesModel);\n    this.map.cols.render(xmlStream, model.cols);\n    this.map.sheetData.render(xmlStream, model.rows);\n    this.map.autoFilter.render(xmlStream, model.autoFilter);\n    this.map.mergeCells.render(xmlStream, model.mergeCells);\n    this.map.dataValidations.render(xmlStream, model.dataValidations);\n    // For some reason hyperlinks have to be after the data validations\n    this.map.hyperlinks.render(xmlStream, model.hyperlinks);\n    this.map.pageMargins.render(xmlStream, pageMarginsModel);\n    this.map.printOptions.render(xmlStream, printOptionsModel);\n    this.map.pageSetup.render(xmlStream, model.pageSetup);\n    this.map.headerFooter.render(xmlStream, headerFooterModel); // NoteL must be after pageSetup\n    this.map.rowBreaks.render(xmlStream, model.rowBreaks);\n    this.map.drawing.render(xmlStream, model.drawing); // Note: must be after rowBreaks\n    this.map.picture.render(xmlStream, model.background); // Note: must be after drawing\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    if (node.name === 'worksheet') {\n      _.each(this.map, (xform) => {\n        xform.reset();\n      });\n      return true;\n    }\n\n    this.parser = this.map[node.name];\n    if (this.parser) {\n      this.parser.parseOpen(node);\n    }\n    return true;\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'worksheet':\n        var properties = this.map.sheetFormatPr.model;\n        if (this.map.sheetPr.model && this.map.sheetPr.model.tabColor) {\n          properties.tabColor = this.map.sheetPr.model.tabColor;\n        }\n        if (this.map.sheetPr.model && this.map.sheetPr.model.outlineProperties) {\n            properties.outlineProperties = this.map.sheetPr.model.outlinePropertiesx;\n        }\n        var sheetProperties = {\n          fitToPage: (this.map.sheetPr.model && this.map.sheetPr.model.pageSetup && this.map.sheetPr.model.pageSetup.fitToPage) || false,\n          margins: this.map.pageMargins.model,\n        };\n        var pageSetup = Object.assign(\n          sheetProperties,\n          this.map.pageSetup.model,\n          this.map.printOptions.model\n        );\n        this.model = {\n          dimensions: this.map.dimension.model,\n          cols: this.map.cols.model,\n          rows: this.map.sheetData.model,\n          mergeCells: this.map.mergeCells.model,\n          hyperlinks: this.map.hyperlinks.model,\n          dataValidations: this.map.dataValidations.model,\n          properties,\n          views: this.map.sheetViews.model,\n          pageSetup,\n          background: this.map.picture.model,\n          drawing: this.map.drawing.model,\n        };\n\n        if (this.map.autoFilter.model) {\n          this.model.autoFilter = this.map.autoFilter.model;\n        }\n        if (this.map.headerFooter.model && (this.map.headerFooter.model.header || this.map.headerFooter.model.footer)) {\n          this.model.pageSetup.headerFooter = this.map.headerFooter.model;\n        }\n        return false;\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  },\n\n  reconcile(model, options) {\n    // options.merges = new Merges();\n    // options.merges.reconcile(model.mergeCells, model.rows);\n    const rels = (model.relationships || []).reduce((h, rel) => {\n      h[rel.Id] = rel;\n      return h;\n    }, {});\n    options.hyperlinkMap = (model.hyperlinks || []).reduce((h, hyperlink) => {\n      if (hyperlink.rId) {\n        h[hyperlink.address] = rels[hyperlink.rId].Target;\n      }\n      return h;\n    }, {});\n    options.formulae = {};\n\n    // compact the rows and cells\n    model.rows = (model.rows && model.rows.filter(Boolean)) || [];\n    model.rows.forEach((row) => {\n      row.cells = (row.cells && row.cells.filter(Boolean)) || [];\n    });\n\n    this.map.cols.reconcile(model.cols, options);\n    this.map.sheetData.reconcile(model.rows, options);\n\n    model.media = [];\n    if (model.drawing) {\n      const drawingRel = rels[model.drawing.rId];\n      const match = drawingRel.Target.match(/\\/drawings\\/([a-zA-Z0-9]+)[.][a-zA-Z]{3,4}$/);\n      if (match) {\n        const drawingName = match[1];\n        const drawing = options.drawings[drawingName];\n        drawing.anchors.forEach(anchor => {\n          if (anchor.medium) {\n            const image = {\n              type: 'image',\n              imageId: anchor.medium.index,\n              range: anchor.range,\n            };\n            model.media.push(image);\n          }\n        });\n      }\n    }\n\n    const backgroundRel = model.background && rels[model.background.rId];\n    if (backgroundRel) {\n      const target = backgroundRel.Target.split('/media/')[1];\n      const imageId = options.mediaIndex && options.mediaIndex[target];\n      if (imageId !== undefined) {\n        model.media.push({\n          type: 'background',\n          imageId,\n        });\n      }\n    }\n\n\n    delete model.relationships;\n    delete model.hyperlinks;\n  },\n});\n"]}