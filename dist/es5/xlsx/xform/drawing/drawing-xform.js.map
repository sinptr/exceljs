{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/drawing-xform.js"],"names":["utils","require","colCache","XmlStream","BaseXform","TwoCellAnchorXform","OneCellAnchorXform","WorkSheetXform","module","exports","map","getAnchorType","model","range","decode","br","inherits","DRAWING_ATTRIBUTES","tag","prepare","anchors","forEach","item","index","anchorType","anchor","render","xmlStream","openXml","StdDocAttributes","openNode","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","push","undefined","reconcile","options"],"mappings":"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","file":"drawing-xform.js","sourcesContent":["'use strict';\r\n\r\nconst utils = require('../../../utils/utils');\r\nconst colCache = require('../../../utils/col-cache');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst TwoCellAnchorXform = require('./two-cell-anchor-xform');\r\nconst OneCellAnchorXform = require('./one-cell-anchor-xform');\r\n\r\nconst WorkSheetXform = (module.exports = function() {\r\n  this.map = {\r\n    'xdr:twoCellAnchor': new TwoCellAnchorXform(),\r\n    'xdr:oneCellAnchor': new OneCellAnchorXform(),\r\n  };\r\n});\r\n\r\nfunction getAnchorType(model) {\r\n  const range = typeof model.range === 'string' ? colCache.decode(model.range) : model.range;\r\n\r\n  return range.br ? 'xdr:twoCellAnchor' : 'xdr:oneCellAnchor';\r\n}\r\n\r\nutils.inherits(\r\n  WorkSheetXform,\r\n  BaseXform,\r\n  {\r\n    DRAWING_ATTRIBUTES: {\r\n      'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\r\n      'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\r\n    },\r\n  },\r\n  {\r\n    get tag() {\r\n      return 'xdr:wsDr';\r\n    },\r\n\r\n    prepare(model) {\r\n      model.anchors.forEach((item, index) => {\r\n        item.anchorType = getAnchorType(item);\r\n        const anchor = this.map[item.anchorType];\r\n        anchor.prepare(item, { index });\r\n      });\r\n    },\r\n\r\n    render(xmlStream, model) {\r\n      xmlStream.openXml(XmlStream.StdDocAttributes);\r\n      xmlStream.openNode(this.tag, WorkSheetXform.DRAWING_ATTRIBUTES);\r\n\r\n      model.anchors.forEach(item => {\r\n        const anchor = this.map[item.anchorType];\r\n        anchor.render(xmlStream, item);\r\n      });\r\n\r\n      xmlStream.closeNode();\r\n    },\r\n\r\n    parseOpen(node) {\r\n      if (this.parser) {\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      }\r\n      switch (node.name) {\r\n        case this.tag:\r\n          this.reset();\r\n          this.model = {\r\n            anchors: [],\r\n          };\r\n          break;\r\n        default:\r\n          this.parser = this.map[node.name];\r\n          if (this.parser) {\r\n            this.parser.parseOpen(node);\r\n          }\r\n          break;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    parseText(text) {\r\n      if (this.parser) {\r\n        this.parser.parseText(text);\r\n      }\r\n    },\r\n\r\n    parseClose(name) {\r\n      if (this.parser) {\r\n        if (!this.parser.parseClose(name)) {\r\n          this.model.anchors.push(this.parser.model);\r\n          this.parser = undefined;\r\n        }\r\n        return true;\r\n      }\r\n      switch (name) {\r\n        case this.tag:\r\n          return false;\r\n        default:\r\n          // could be some unrecognised tags\r\n          return true;\r\n      }\r\n    },\r\n\r\n    reconcile(model, options) {\r\n      model.anchors.forEach(anchor => {\r\n        if (anchor.br) {\r\n          this.map['xdr:twoCellAnchor'].reconcile(anchor, options);\r\n        } else {\r\n          this.map['xdr:oneCellAnchor'].reconcile(anchor, options);\r\n        }\r\n      });\r\n    },\r\n  }\r\n);\r\n"]}