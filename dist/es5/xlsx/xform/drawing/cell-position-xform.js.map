{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/cell-position-xform.js"],"names":["utils","require","BaseXform","IntegerXform","CellPositionXform","module","exports","options","tag","map","zero","inherits","render","xmlStream","model","openNode","nativeCol","nativeColOff","nativeRow","nativeRowOff","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","undefined"],"mappings":"AAAA;;AAEA,IAAMA,QAAQC,QAAQ,sBAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,eAAR,CAAlB;AACA,IAAME,eAAeF,QAAQ,yBAAR,CAArB;;AAEA,IAAMG,oBAAqBC,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC5D,OAAKC,GAAL,GAAWD,QAAQC,GAAnB;AACA,OAAKC,GAAL,GAAW;AACT,eAAW,IAAIN,YAAJ,CAAiB,EAAEK,KAAK,SAAP,EAAkBE,MAAM,IAAxB,EAAjB,CADF;AAET,kBAAc,IAAIP,YAAJ,CAAiB,EAAEK,KAAK,YAAP,EAAqBE,MAAM,IAA3B,EAAjB,CAFL;AAGT,eAAW,IAAIP,YAAJ,CAAiB,EAAEK,KAAK,SAAP,EAAkBE,MAAM,IAAxB,EAAjB,CAHF;AAIT,kBAAc,IAAIP,YAAJ,CAAiB,EAAEK,KAAK,YAAP,EAAqBE,MAAM,IAA3B,EAAjB;AAJL,GAAX;AAMD,CARD;;AAUAV,MAAMW,QAAN,CAAeP,iBAAf,EAAkCF,SAAlC,EAA6C;AAC3CU,QAD2C,kBACpCC,SADoC,EACzBC,KADyB,EAClB;AACvBD,cAAUE,QAAV,CAAmB,KAAKP,GAAxB;;AAEA,SAAKC,GAAL,CAAS,SAAT,EAAoBG,MAApB,CAA2BC,SAA3B,EAAsCC,MAAME,SAA5C;AACA,SAAKP,GAAL,CAAS,YAAT,EAAuBG,MAAvB,CAA8BC,SAA9B,EAAyCC,MAAMG,YAA/C;;AAEA,SAAKR,GAAL,CAAS,SAAT,EAAoBG,MAApB,CAA2BC,SAA3B,EAAsCC,MAAMI,SAA5C;AACA,SAAKT,GAAL,CAAS,YAAT,EAAuBG,MAAvB,CAA8BC,SAA9B,EAAyCC,MAAMK,YAA/C;;AAEAN,cAAUO,SAAV;AACD,GAX0C;AAa3CC,WAb2C,qBAajCC,IAbiC,EAa3B;AACd,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;AACD,YAAQA,KAAKE,IAAb;AACE,WAAK,KAAKhB,GAAV;AACE,aAAKiB,KAAL;AACA;AACF;AACE,aAAKF,MAAL,GAAc,KAAKd,GAAL,CAASa,KAAKE,IAAd,CAAd;AACA,YAAI,KAAKD,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACD;AACD;AATJ;AAWA,WAAO,IAAP;AACD,GA9B0C;AAgC3CI,WAhC2C,qBAgCjCC,IAhCiC,EAgC3B;AACd,QAAI,KAAKJ,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYG,SAAZ,CAAsBC,IAAtB;AACD;AACF,GApC0C;AAsC3CC,YAtC2C,sBAsChCJ,IAtCgC,EAsC1B;AACf,QAAI,KAAKD,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYK,UAAZ,CAAuBJ,IAAvB,CAAL,EAAmC;AACjC,aAAKD,MAAL,GAAcM,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQL,IAAR;AACE,WAAK,KAAKhB,GAAV;AACE,aAAKM,KAAL,GAAa;AACXE,qBAAW,KAAKP,GAAL,CAAS,SAAT,EAAoBK,KADpB;AAEXG,wBAAc,KAAKR,GAAL,CAAS,YAAT,EAAuBK,KAF1B;AAGXI,qBAAW,KAAKT,GAAL,CAAS,SAAT,EAAoBK,KAHpB;AAIXK,wBAAc,KAAKV,GAAL,CAAS,YAAT,EAAuBK;AAJ1B,SAAb;AAMA,eAAO,KAAP;AACF;AACE;AACA,eAAO,IAAP;AAXJ;AAaD;AA1D0C,CAA7C","file":"cell-position-xform.js","sourcesContent":["'use strict';\r\n\r\nconst utils = require('../../../utils/utils');\r\nconst BaseXform = require('../base-xform');\r\nconst IntegerXform = require('../simple/integer-xform');\r\n\r\nconst CellPositionXform = (module.exports = function(options) {\r\n  this.tag = options.tag;\r\n  this.map = {\r\n    'xdr:col': new IntegerXform({ tag: 'xdr:col', zero: true }),\r\n    'xdr:colOff': new IntegerXform({ tag: 'xdr:colOff', zero: true }),\r\n    'xdr:row': new IntegerXform({ tag: 'xdr:row', zero: true }),\r\n    'xdr:rowOff': new IntegerXform({ tag: 'xdr:rowOff', zero: true }),\r\n  };\r\n});\r\n\r\nutils.inherits(CellPositionXform, BaseXform, {\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['xdr:col'].render(xmlStream, model.nativeCol);\r\n    this.map['xdr:colOff'].render(xmlStream, model.nativeColOff);\r\n\r\n    this.map['xdr:row'].render(xmlStream, model.nativeRow);\r\n    this.map['xdr:rowOff'].render(xmlStream, model.nativeRowOff);\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = {\r\n          nativeCol: this.map['xdr:col'].model,\r\n          nativeColOff: this.map['xdr:colOff'].model,\r\n          nativeRow: this.map['xdr:row'].model,\r\n          nativeRowOff: this.map['xdr:rowOff'].model,\r\n        };\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  },\r\n});\r\n"]}