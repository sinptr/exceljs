{"version":3,"sources":["../../../lib/doc/image.js"],"names":["colCache","require","Anchor","Image","worksheet","model","prototype","type","imageId","range","tl","br","ext","Error","decoded","decode","col","left","row","top","right","bottom","editAs","module","exports"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,oBAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,UAAR,CAAf;;AAEA,IAAME,QAAQ,SAARA,KAAQ,CAASC,SAAT,EAAoBC,KAApB,EAA2B;AACvC,OAAKD,SAAL,GAAiBA,SAAjB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACD,CAHD;;AAKAF,MAAMG,SAAN,GAAkB;AAChB,MAAID,KAAJ,GAAY;AACV,YAAQ,KAAKE,IAAb;AACE,WAAK,YAAL;AACE,eAAO;AACLA,gBAAM,KAAKA,IADN;AAELC,mBAAS,KAAKA;AAFT,SAAP;AAIF,WAAK,OAAL;AACE,eAAO;AACLD,gBAAM,KAAKA,IADN;AAELC,mBAAS,KAAKA,OAFT;AAGLC,iBAAO;AACLC,gBAAI,KAAKD,KAAL,CAAWC,EAAX,CAAcL,KADb;AAELM,gBAAI,KAAKF,KAAL,CAAWE,EAAX,IAAiB,KAAKF,KAAL,CAAWE,EAAX,CAAcN,KAF9B;AAGLO,iBAAK,KAAKH,KAAL,CAAWG;AAHX;AAHF,SAAP;AASF;AACE,cAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AAjBJ;AAmBD,GArBe;;AAuBhB,MAAIR,KAAJ,OAAoC;AAAA,QAAxBE,IAAwB,QAAxBA,IAAwB;AAAA,QAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,QAATC,KAAS,QAATA,KAAS;;AAClC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;;AAEA,QAAID,SAAS,OAAb,EAAsB;AACpB,UAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAMK,UAAUd,SAASe,MAAT,CAAgBN,KAAhB,CAAhB;AACA,aAAKA,KAAL,GAAa;AACXC,cAAI,IAAIR,MAAJ,CAAW,KAAKE,SAAhB,EAA2B,EAAEY,KAAKF,QAAQG,IAAf,EAAqBC,KAAKJ,QAAQK,GAAlC,EAA3B,EAAoE,CAAC,CAArE,CADO;AAEXR,cAAI,IAAIT,MAAJ,CAAW,KAAKE,SAAhB,EAA2B,EAAEY,KAAKF,QAAQM,KAAf,EAAsBF,KAAKJ,QAAQO,MAAnC,EAA3B,EAAwE,CAAxE,CAFO;AAGXC,kBAAQ;AAHG,SAAb;AAKD,OAPD,MAOO;AACL,aAAKb,KAAL,GAAa;AACXC,cAAI,IAAIR,MAAJ,CAAW,KAAKE,SAAhB,EAA2BK,MAAMC,EAAjC,EAAqC,CAArC,CADO;AAEXC,cAAIF,MAAME,EAAN,IAAY,IAAIT,MAAJ,CAAW,KAAKE,SAAhB,EAA2BK,MAAME,EAAjC,EAAqC,CAArC,CAFL;AAGXC,eAAKH,MAAMG,GAHA;AAIXU,kBAAQb,MAAMa;AAJH,SAAb;AAMD;AACF;AACF;AA5Ce,CAAlB;;AA+CAC,OAAOC,OAAP,GAAiBrB,KAAjB","file":"image.js","sourcesContent":["const colCache = require('../utils/col-cache');\r\nconst Anchor = require('./anchor');\r\n\r\nconst Image = function(worksheet, model) {\r\n  this.worksheet = worksheet;\r\n  this.model = model;\r\n};\r\n\r\nImage.prototype = {\r\n  get model() {\r\n    switch (this.type) {\r\n      case 'background':\r\n        return {\r\n          type: this.type,\r\n          imageId: this.imageId,\r\n        };\r\n      case 'image':\r\n        return {\r\n          type: this.type,\r\n          imageId: this.imageId,\r\n          range: {\r\n            tl: this.range.tl.model,\r\n            br: this.range.br && this.range.br.model,\r\n            ext: this.range.ext,\r\n          },\r\n        };\r\n      default:\r\n        throw new Error('Invalid Image Type');\r\n    }\r\n  },\r\n\r\n  set model({ type, imageId, range }) {\r\n    this.type = type;\r\n    this.imageId = imageId;\r\n\r\n    if (type === 'image') {\r\n      if (typeof range === 'string') {\r\n        const decoded = colCache.decode(range);\r\n        this.range = {\r\n          tl: new Anchor(this.worksheet, { col: decoded.left, row: decoded.top }, -1),\r\n          br: new Anchor(this.worksheet, { col: decoded.right, row: decoded.bottom }, 0),\r\n          editAs: 'oneCell',\r\n        };\r\n      } else {\r\n        this.range = {\r\n          tl: new Anchor(this.worksheet, range.tl, 0),\r\n          br: range.br && new Anchor(this.worksheet, range.br, 0),\r\n          ext: range.ext,\r\n          editAs: range.editAs,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = Image;\r\n"]}